[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "tethys-platform"
description =  "Primary Tethys Platform Django Site Project"
readme = "README.md"
license-files = ["LICENSE"]
keywords = ["web app", "scientific", "geospatial"]
authors = [
    {name = "Nathan Swain", email = "nswain@aquaveo.com"},
    {name = "Scott Christensen", email="ScottyChristensen@gmail.com"},
]
classifiers = [
     "Environment :: Web Environment",
     "Framework :: Django",
     "Intended Audience :: Developers",
     "Operating System :: OS Independent",
     "Programming Language :: Python",
     "Programming Language :: Python :: 3",
     "Programming Language :: Python :: 3.10",
     "Topic :: Internet :: WWW/HTTP",
     "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
dynamic = ["version"]
requires-python = ">= 3.10"
dependencies = [
    "pyopenssl",
  # core dependencies
    "django>=3.2,<6",
    "tornado>=6.5,<7",
    "channels",
    "daphne",
    "requests>=2.32.4,<3",
    "bcrypt",
    "cryptography>=44.0.1,<45",
  # Gen CLI commands
    "pyyaml",
    "jinja2",
  # django plugin dependencies
    "django-bootstrap5",
    "django-model-utils",
    "django-guardian",
]

[project.optional-dependencies]
test = ["pytest", "pytest-django", "pytest-cov", "requests_mock"]
lint = ["flake8", "black"]

[project.urls]
homepage = "http://tethysplatform.org/"
documentation = "http://docs.tethysplatform.org/en/stable/"
repository = "https://github.com/tethysplatform/tethys"

[project.scripts]
tethys = "tethys_cli:tethys_command"

[tool.setuptools_scm]
write_to = "tethys_portal/_version.py"
local_scheme = "no-local-version"

[tool.setuptools.packages.find]
include = ["tethys_*"]

[tool.setuptools]
package-data = {"*" = ["*"]}
[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tethys_portal.settings"
addopts = "-s --cov"
testpaths = ["tests/unit_tests/"]

[tool.coverage.run]
omit = [
    "docs/*",
    "tests/*",
    "tethys_portal/_version.py",
    "tethys_portal/__init__.py",
    "*/migrations/*",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
